<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="setting">

	<select id="selectDeliveryCompanyList" resultType="deliveryCompany">
		select * from delivery_company
	</select>
	
	<select id="selectOneDeliverySetting" resultType="deliverySetting">
		select * from delivery_setting
	</select>
	
	<select id="selectDoseosanganList" resultType="doseosangan">
		select * from doseosangan
	</select>
	
	<select id="selectMapList" resultType="maps">
		SELECT a.*, b.map_api_name
		FROM map a, map_api b
		WHERE a.map_api_no = b.map_api_no
	</select>
	
	<select id="selectHistoryList" resultType="history">
		select * from history
	</select>
	
	<select id="selectBannerList" resultType="banner">
		SELECT 
			a.*,
			b.CATEGORY_NAME 
		FROM banner a 
			JOIN category b ON(a.category_no = b.CATEGORY_NO)
	</select>
	
	<select id="selectMenuCteList" resultType="category">
		select * from category where category_type = 'menu' order by category_no
	</select>
	
	<select id="selectPopupList" resultType="popup">
		select * from popup 
		<where>
			<if test="field != null and keyword != ''">
				${field} like concat('%',#{keyword},'%')
			</if>
			<if test="start_date != null and end_date != null">
				<if test="start_date != '' and end_date == ''">
					and start_date <![CDATA[>=]]> #{start_date} 
				</if>
				<if test="start_date != '' and end_date != ''">
					and start_date <![CDATA[>=]]> #{start_date} 
					and end_date <![CDATA[<=]]> #{end_date}
				</if>
				<if test="start_date == '' and end_date != ''">
					and end_date <![CDATA[<=]]> #{end_date}
				</if>
			</if>
		</where>
		
		order by code
	</select>
	
	<select id="selectCouponListByParam" resultType="coupon">
	 select * from coupon
	 	<where>
			<if test="field != null and keyword != ''">
				${field} like concat('%',#{keyword},'%')
			</if>
			<if test="expiry_start_date != null and expiry_end_date != null">
				<if test="expiry_start_date != '' and expiry_end_date == ''">
					and expiry_start_date <![CDATA[>=]]> #{expiry_start_date} 
				</if>
				<if test="expiry_start_date != '' and expiry_end_date != ''">
					and expiry_start_date <![CDATA[>=]]> #{expiry_start_date} 
					and expiry_end_date <![CDATA[<=]]> #{expiry_end_date}
				</if>
				<if test="expiry_start_date == '' and expiry_end_date != ''">
					and expiry_end_date <![CDATA[<=]]> #{expiry_end_date}
				</if>
				or expiry_type = 'unlimited'
			</if>
		</where>
	 order by coupon_no
	</select>
  	
  	<select id="selectPoint" resultType="point">
  		select * from point
  	</select>
  	<select id="selectPointUse" resultType="pointUse">
 		select * from point_use 	
  	</select>
  	<select id="selectPointSave" resultType="pointSave">
  		select * from point_save
  	</select>
  	
  	<select id="selectAdminMenuList" resultType="adminMenu">
  		select * from admin_menu
  	</select>
  	
  	<select id="selectLocaleList" resultType="locale">
  		select * from locale ORDER BY locale_name desc
  	</select>
  	
  	<select id="selectAdminSetting" resultType="adminSetting">
  		select * from admin_setting
  	</select>
  	
  	<select id="selectOneDeliveryNotice" resultType="deliveryNotice">
  		select * from delivery_notice where locale = #{locale}
  	</select>
  	
  	<select id="selectSeoSetting" resultType="seoSetting">
  		select * from seo_setting
  	</select>
  	
  	<select id="selectPgSetting" resultType="billingPgSetting">
  		select * from billing_pg_setting
  	</select>
  	
  	<select id="selectKgIniSetting" resultType="kgIniSetting">
  		select * from kg_ini_setting
  	</select>
  	
  	<select id="selectEximbaySetting" resultType="eximbaySetting">
  		select * from eximbay_setting
  	</select>
  	
  	<select id="selectNaverShoppingSetting" resultType="naverShoppingSetting">
  		select * from naver_shopping_setting
  	</select>
  	
  	<select id="selectNaverpaySetting" resultType="naverpaySetting">
  		select * from naverpay_setting
  	</select>
  	
  	<select id="selectXpaySetting" resultType="xpaySetting">
  		select * from xpay_setting
  	</select>
  	
  	<select id="selectKcpSetting" resultType="kcpSetting">
  		select * from kcp_setting
  	</select>
  	<update id="updateAdminSetting">
  		update admin_setting set email = #{email}, phone = #{phone}, caller_id = #{callerId}, 
			<if test="thumbnailImg != null and thumbnailImg != ''">
	  			thumbnail_img = #{thumbnailImg}, 
			</if>
			<if test="faviconImg != null and faviconImg != ''">
	  			favicon_img = #{faviconImg}, 
			</if>
  			is_discount = #{isDiscount}, history_layout_no = #{historyLayoutNo}, history_view_type = #{historyViewType} 
  	</update>
  	
  	<update id="updateDeliveryNotice">
  		update delivery_notice set content = #{content} where locale = #{locale}
  	</update>
  	
  	<update id="updateAdminMenuAllN">
  		update admin_menu set status = 'N'
  	</update>
  	
  	<update id="updateLocaleAllN">
  		update locale set is_default = 'N', is_choosen = 'N'
  	</update>
  	
  	<update id="updateAdminMenu">
  		update admin_menu set status = 'Y' where menu_no = #{menuNo}
  	</update>
  	
  	<update id="updateLocaleChoosen">
  		update locale set is_choosen = 'Y' where locale_code = #{localeCode}
  	</update>
  	
  	<update id="updateLocaleDefault">
  		update locale set is_default = 'Y' where locale_code = #{localeCode}
  	</update>
  	
  	<update id="updateSeoSetting">
  		update seo_setting set robots = #{robots}, rich_snippet = #{richSnippet}
  	</update>
 
 	<insert id="insertStaff">
 		INSERT INTO
 			staff(staff_no,
 				  staff_name,
 				  staff_position,
 				  staff_career,
 				  staff_profile,
 				  img_url,
 				  reg_Date)	
 		VALUES(NEXTVAL(seq_staff_no),
 			   #{staffName},
 			   #{staffPosition},
 			   #{staffCareer},
 			   #{staffProfile},
 			   #{imgUrl},
 			   sysdate())
 	</insert>
 	
 	<select id="selectStaffList" resultType="staff">
 		SELECT
			ROW_NUMBER() OVER(ORDER BY s.reg_date DESC) AS `rowNum`,
			staff_no,
			img_url,
			staff_name,
			staff_position,
			reg_date
		FROM
			staff s
		ORDER BY
			s.reg_date DESC
 	</select>
 	
 	<select id="totalStaffListCount" resultType="_int">
 		SELECT
 			COUNT(*)
 		FROM
 			staff
 	</select>
 	
 	<delete id="deleteStaff">
 		DELETE FROM
 			staff
 		<where>
			<foreach collection="array" item="item" open="(" close=")" separator="or">
		 		staff_no = #{item}
		 	</foreach>
		</where>
	</delete>
	
	<select id="searchStaffList" resultType="staff">
		SELECT
			ROW_NUMBER() OVER(ORDER BY s.reg_date DESC) AS `rowNum`,
			staff_no,
			img_url,
			staff_name,
			staff_position,
			reg_date
		FROM
			staff s
		<where>	
			<if test="keyword != null and keyword != ''" >
				${type} LIKE CONCAT('%', #{keyword}, '%')
			</if>
		</where>
	</select>
	
	<select id="selectsearchStaffListCount" resultType="_int">
		SELECT
			COUNT(*)
		FROM
			staff
		<where>	
			<if test="keyword != null and keyword != ''" >
				${type} LIKE CONCAT('%', #{keyword}, '%')
			</if>
		</where>
	</select>
</mapper>